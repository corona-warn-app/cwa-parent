name: ci-release
on:
  release:
    types:
      - created
      - edited
      - prereleased
jobs:
  release-notes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: release notes
        run: |
          TAG=${GITHUB_REF/refs\/tags\/}
          npx github-release-notes release --override --tags ${TAG}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GREN_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/cache@v1
        env:
          cache-name: m2
        with:
          path: ~/.m2/repository
          key: ${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ env.cache-name }}-
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: version
        run: >-
          APP_SHA=$(git rev-parse --short ${GITHUB_SHA});
          APP_TAG=${GITHUB_REF/refs\/tags\/}
          APP_VERSION=${APP_TAG};
          echo "APP_SHA=${APP_SHA}" >> ${GITHUB_ENV};
          echo "APP_TAG=${APP_TAG}" >> ${GITHUB_ENV};
          echo "APP_VERSION=${APP_VERSION}" >> ${GITHUB_ENV};
      - name: mvn version
        run: mvn --batch-mode versions:set -DgenerateBackupPoms=false -DnewVersion=${APP_VERSION}
      - name: mvn deploy
        run: mvn --batch-mode deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      APP_VERSION: ${{ env.APP_VERSION }}
  update-dependency-in-test-project:
    needs:
      - build
    runs-on: ubuntu-latest
    env:
      APP_VERSION: ${{ needs.build.outputs.APP_VERSION }}
      REPO_OWNER: corona-warn-app
      REPO_NAME: felix-test-service
      LABEL_NAME: enhancement
      GH_TOKEN: ${{ secrets.GPR_TOKEN_F11H }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          repository: ${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}
          ref: main
          token: ${{ env.GH_TOKEN }}
      - name: Create and Checkout new Branch
        run: git checkout -b chore/update-cwa-parent-${{ env.APP_VERSION }}
      - name: Set new Parent Version
        run: |
          sudo apt-get update
          sudo apt-get install xmlstarlet -y
          xmlstarlet edit -P -L --update _:project/_:parent/_:version --value ${{ env.APP_VERSION }} pom.xml
      - name: Commit and Push changes
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit -a --allow-empty -m "Update CWA-Parent to ${{ env.APP_VERSION }}"
          git push --set-upstream origin chore/update-cwa-parent-${{ env.APP_VERSION}}
      - name: Create Pull Request
        uses: actions/github-script@v6
        with:
          github-token: ${{ env.GH_TOKEN }}
          script: |
            const pr = github.rest.pulls.create({
              owner: process.env.REPO_OWNER,
              repo: process.env.REPO_NAME,
              title: 'Chore: Update CWA-Parent to ' + process.env.APP_VERSION,
              head: 'chore/update-cwa-parent-' + process.env.APP_VERSION,
              base: 'main',
              body: `### Update the parent pom (cwa-parent) to the last released version.
              
              This PR will update several dependencies within this project.
              Please do a full integration test before merging this PR.
              
              Also please have a look on the [Release Notes](https://github.com/corona-warn-app/cwa-parent/releases/tag/${process.env.APP_VERSION}) of this new CWA-Parent version.`,
              maintainer_can_modify: true,
              draft: false,
            });
            pr.then(response => {
              console.log(response.data.number);
              if (response.status === 201) {
                github.rest.issues.addLabels({
                  owner: process.env.REPO_OWNER,
                  repo: process.env.REPO_NAME,
                  number: response.data.number,
                  labels: [ { name: process.env.LABEL_NAME } ]            
                });
              }  
            });
