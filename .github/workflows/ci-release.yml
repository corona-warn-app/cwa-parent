name: ci-release
on:
  release:
    types:
      - created
      - edited
      - prereleased
jobs:
  release-notes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: release notes
        run: |
          TAG=${GITHUB_REF/refs\/tags\/}
          npx github-release-notes release --override --tags ${TAG}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GREN_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/cache@v1
        env:
          cache-name: m2
        with:
          path: ~/.m2/repository
          key: ${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ env.cache-name }}-
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: version
        run: >-
          APP_SHA=$(git rev-parse --short ${GITHUB_SHA});
          APP_TAG=${GITHUB_REF/refs\/tags\/}
          APP_VERSION=${APP_TAG};
          echo "APP_SHA=${APP_SHA}" >> ${GITHUB_ENV};
          echo "APP_TAG=${APP_TAG}" >> ${GITHUB_ENV};
          echo "APP_VERSION=${APP_VERSION}" >> ${GITHUB_ENV};
      - name: mvn version
        run: mvn --batch-mode versions:set -DgenerateBackupPoms=false -DnewVersion=${APP_VERSION}
      - name: mvn deploy
        run: mvn --batch-mode deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      APP_VERSION: ${{ env.APP_VERSION }}
  update-dependency-in-test-project:
    needs:
      - build
    uses: corona-warn-app/cwa-parent/.github/workflows/update-depending-project.yml@main
    with:
      APP_VERSION: ${{ needs.build.outputs.APP_VERSION }}
      GH_TOKEN: "${{ secrets.GPR_TOKEN_F11H }}"
      REPO_OWNER: corona-warn-app
      REPO_NAME: felix-test-service
      LABEL_NAME: enhancement
